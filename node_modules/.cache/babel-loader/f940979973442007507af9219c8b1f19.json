{"ast":null,"code":"//The entire insertion sort implementation of this project\nexport function getInsertionSortAnimation(array) {\n  //Looping through the array to sort elements starting from index 0:\n  for (let i = 1; i < array.length; i++) {\n    //variables to hold the index and value at current index.\n    let value = array[i];\n    hole = i; //while loop to compare and swap element:\n\n    while (hole > 0 && array[hole - 1] > value) {\n      //swap the element, larger element will go after and smaller will go first:\n      array[hole] = array[hole - 1];\n      hole--;\n    } // set the elemenet at hole to become the value\n\n\n    array[hole] = value;\n  }\n\n  return array;\n} //end of getInsertionSortAlgorithm()","map":{"version":3,"sources":["/Users/willieluong/Desktop/sorting-visualizer/src/sortinalgorithms/insertionSort.js"],"names":["getInsertionSortAnimation","array","i","length","value","hole"],"mappings":"AAAA;AACA,OAAO,SAASA,yBAAT,CAAmCC,KAAnC,EAAyC;AAE5C;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAK,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EACA;AACI;AACA,QAAIE,KAAK,GAAGH,KAAK,CAACC,CAAD,CAAjB;AACAG,IAAAA,IAAI,GAAGH,CAAP,CAHJ,CAII;;AACA,WAAMG,IAAI,GAAG,CAAP,IAAYJ,KAAK,CAACI,IAAI,GAAG,CAAR,CAAL,GAAkBD,KAApC,EACA;AACI;AACAH,MAAAA,KAAK,CAACI,IAAD,CAAL,GAAcJ,KAAK,CAACI,IAAI,GAAG,CAAR,CAAnB;AACAA,MAAAA,IAAI;AAEP,KAXL,CAYI;;;AACAJ,IAAAA,KAAK,CAACI,IAAD,CAAL,GAAcD,KAAd;AAEH;;AAED,SAAOH,KAAP;AAEH,C,CAAA","sourcesContent":["//The entire insertion sort implementation of this project\nexport function getInsertionSortAnimation(array){\n\n    //Looping through the array to sort elements starting from index 0:\n    for(let i = 1; i < array.length; i++)\n    {\n        //variables to hold the index and value at current index.\n        let value = array[i];\n        hole = i;\n        //while loop to compare and swap element:\n        while(hole > 0 && array[hole - 1] > value)\n        {\n            //swap the element, larger element will go after and smaller will go first:\n            array[hole] = array[hole - 1];\n            hole--;\n\n        }\n        // set the elemenet at hole to become the value\n        array[hole] = value\n\n    }\n\n    return array;\n\n}//end of getInsertionSortAlgorithm()\n"]},"metadata":{},"sourceType":"module"}