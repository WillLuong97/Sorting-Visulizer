{"ast":null,"code":"//Function to handle bubble sort:\nexport function getBubblesSortAnimations(array) {\n  //variable to hold the animation list of the array\n  const animation = []; //make a copy of each element into another array\n\n  const auxiliaryArray = array.slice(); //sort the array through bubble sort\n\n  bubbleSort(animation, auxiliaryArray);\n  return animation;\n} //end of bubble sort\n//Function to sort the array using bubble sort\n\nfunction bubbleSort(aninmation, array) {\n  //looping through the array and chek if each element is on the right order or not\n  for (let i = 0; i < array.length - 1; i++) {\n    for (let j = 0; j < array.length - i - 1; j++) {\n      animation.push([j, j + 1]);\n      animation.push([j, j + 1]);\n\n      if (array[j] > array[j + 1]) {\n        //swap the elment if they are not in the right order\n        swap(array, j, j + 1);\n      } else {\n        //the array is already sorted\n        animation.push(-1, -1);\n        animation.push(-1, -1);\n      }\n    }\n  }\n} //end of bubbleSort(animation, array)\n//Helper method to swap the elemenet: \n\n\nfunction swap(before, after, array) {\n  var temp; //swap the element:\n\n  temp = array[before];\n  array[before] = array[after];\n  array[after] = temp;\n}","map":{"version":3,"sources":["/Users/willieluong/Desktop/sorting-visualizer/src/sortinalgorithms/BubbleSort.js"],"names":["getBubblesSortAnimations","array","animation","auxiliaryArray","slice","bubbleSort","aninmation","i","length","j","push","swap","before","after","temp"],"mappings":"AAAA;AACA,OAAO,SAASA,wBAAT,CAAkCC,KAAlC,EAAyC;AAC5C;AACA,QAAMC,SAAS,GAAG,EAAlB,CAF4C,CAG5C;;AACA,QAAMC,cAAc,GAAGF,KAAK,CAACG,KAAN,EAAvB,CAJ4C,CAK5C;;AACAC,EAAAA,UAAU,CAACH,SAAD,EAAYC,cAAZ,CAAV;AACA,SAAOD,SAAP;AACD,C,CAAA;AAEH;;AACA,SAASG,UAAT,CAAoBC,UAApB,EAAgCL,KAAhC,EACA;AAEI;AACA,OAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,KAAK,CAACO,MAAN,GAAe,CAAlC,EAAqCD,CAAC,EAAtC,EACA;AACI,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,KAAK,CAACO,MAAN,GAAeD,CAAf,GAAmB,CAAtC,EAAyCE,CAAC,EAA1C,EACA;AACIP,MAAAA,SAAS,CAACQ,IAAV,CAAe,CAACD,CAAD,EAAIA,CAAC,GAAC,CAAN,CAAf;AACAP,MAAAA,SAAS,CAACQ,IAAV,CAAe,CAACD,CAAD,EAAIA,CAAC,GAAC,CAAN,CAAf;;AACA,UAAGR,KAAK,CAACQ,CAAD,CAAL,GAAWR,KAAK,CAACQ,CAAC,GAAC,CAAH,CAAnB,EACA;AAEI;AACAE,QAAAA,IAAI,CAACV,KAAD,EAAQQ,CAAR,EAAWA,CAAC,GAAC,CAAb,CAAJ;AAEH,OAND,MAQI;AACA;AACAP,QAAAA,SAAS,CAACQ,IAAV,CAAe,CAAC,CAAhB,EAAkB,CAAC,CAAnB;AACAR,QAAAA,SAAS,CAACQ,IAAV,CAAe,CAAC,CAAhB,EAAkB,CAAC,CAAnB;AACH;AACJ;AACJ;AACJ,C,CAAA;AAGD;;;AACA,SAASC,IAAT,CAAcC,MAAd,EAAsBC,KAAtB,EAA6BZ,KAA7B,EACA;AACI,MAAIa,IAAJ,CADJ,CAEI;;AACAA,EAAAA,IAAI,GAAGb,KAAK,CAACW,MAAD,CAAZ;AACAX,EAAAA,KAAK,CAACW,MAAD,CAAL,GAAgBX,KAAK,CAACY,KAAD,CAArB;AACAZ,EAAAA,KAAK,CAACY,KAAD,CAAL,GAAeC,IAAf;AAGH","sourcesContent":["//Function to handle bubble sort:\nexport function getBubblesSortAnimations(array) {\n    //variable to hold the animation list of the array\n    const animation = [];\n    //make a copy of each element into another array\n    const auxiliaryArray = array.slice();\n    //sort the array through bubble sort\n    bubbleSort(animation, auxiliaryArray);\n    return animation;\n  }//end of bubble sort\n\n//Function to sort the array using bubble sort\nfunction bubbleSort(aninmation, array)\n{\n    \n    //looping through the array and chek if each element is on the right order or not\n    for(let i = 0; i < array.length - 1; i++)\n    {\n        for(let j = 0; j < array.length - i - 1; j++)\n        {\n            animation.push([j, j+1]);\n            animation.push([j, j+1]);\n            if(array[j] > array[j+1])\n            {\n                \n                //swap the elment if they are not in the right order\n                swap(array, j, j+1);\n\n            }\n\n            else{\n                //the array is already sorted\n                animation.push(-1,-1);\n                animation.push(-1,-1);\n            }\n        }\n    }\n}//end of bubbleSort(animation, array)\n  \n\n//Helper method to swap the elemenet: \nfunction swap(before, after, array)\n{\n    var temp;\n    //swap the element:\n    temp = array[before]; \n    array[before] = array[after];\n    array[after] = temp;\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   "]},"metadata":{},"sourceType":"module"}