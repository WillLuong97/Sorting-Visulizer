{"ast":null,"code":"//fucntion to handle the selection sort algorithm and animation backend\nexport function getSelectionSortAnimation(array) {\n  let length = array.length; //loop through the array until n-2 (n is the length of the array)\n\n  for (let i = 0; i < length - 1; i++) {\n    //set the smallest element to be at the current index of the loop\n    let indexOfMin = i; //loop through the array again to match the smallest element with its neighbors\n\n    for (let j = i + 1; j < length; j++) {\n      //if the neighbor element is lesser than the smallest element, then swap the index of the \n      if (array[j] < array[indexOfMin]) {\n        //smallest element to be the neighbor\n        indexOfMin = j;\n      }\n    }\n\n    let temp = array[i];\n    array[i] = array[indexOfMin];\n    array[indexOfMin] = temp;\n  }\n\n  return array;\n} // end of getSelectionSortAnimation(array)","map":{"version":3,"sources":["/Users/willieluong/Desktop/sorting-visualizer/src/sortinalgorithms/selectionSort.js"],"names":["getSelectionSortAnimation","array","length","i","indexOfMin","j","temp"],"mappings":"AAAA;AACA,OAAO,SAASA,yBAAT,CAAmCC,KAAnC,EACP;AACI,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB,CADJ,CAEI;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,MAAM,GAAG,CAA5B,EAA+BC,CAAC,EAAhC,EACA;AACI;AACA,QAAIC,UAAU,GAAGD,CAAjB,CAFJ,CAGI;;AACA,SAAI,IAAIE,CAAC,GAAGF,CAAC,GAAE,CAAf,EAAkBE,CAAC,GAAGH,MAAtB,EAA8BG,CAAC,EAA/B,EACA;AACI;AACA,UAAGJ,KAAK,CAACI,CAAD,CAAL,GAAWJ,KAAK,CAACG,UAAD,CAAnB,EACA;AACI;AACAA,QAAAA,UAAU,GAAGC,CAAb;AACH;AACJ;;AAED,QAAIC,IAAI,GAAGL,KAAK,CAACE,CAAD,CAAhB;AACAF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAWF,KAAK,CAACG,UAAD,CAAhB;AACAH,IAAAA,KAAK,CAACG,UAAD,CAAL,GAAoBE,IAApB;AACH;;AACD,SAAOL,KAAP;AACH,C,CAAA","sourcesContent":["//fucntion to handle the selection sort algorithm and animation backend\nexport function getSelectionSortAnimation(array)\n{\n    let length = array.length\n    //loop through the array until n-2 (n is the length of the array)\n    for(let i = 0; i < length - 1; i++)\n    {\n        //set the smallest element to be at the current index of the loop\n        let indexOfMin = i;\n        //loop through the array again to match the smallest element with its neighbors\n        for(let j = i +1; j < length; j++)\n        {\n            //if the neighbor element is lesser than the smallest element, then swap the index of the \n            if(array[j] < array[indexOfMin])\n            {\n                //smallest element to be the neighbor\n                indexOfMin = j;\n            }\n        }\n\n        let temp = array[i];\n        array[i] = array[indexOfMin];\n        array[indexOfMin] = temp;\n    }\n    return array;\n}// end of getSelectionSortAnimation(array)\n\n"]},"metadata":{},"sourceType":"module"}