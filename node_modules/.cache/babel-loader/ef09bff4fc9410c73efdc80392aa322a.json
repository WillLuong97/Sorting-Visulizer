{"ast":null,"code":"//Function to handle bubble sort:\nexport function getBubblesSortAnimations(array) {\n  //variable to hold the animation list of the array\n  const animation = []; //make a copy of each element into another array\n\n  const auxiliaryArray = array.slice(); //sort the array through bubble sort\n\n  bubbleSort(animation, auxiliaryArray);\n  return animation;\n} //end of bubble sort\n//Function to sort the array using bubble sort\n\nfunction bubbleSort(aninmation, array) {\n  var temp; //looping through the array and chek if each element is on the right order or not\n\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length - 1; j++) {\n      if (array[j] > array[j + 1]) {\n        //swap the element:\n        temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n    }\n  }\n\n  return array;\n}","map":{"version":3,"sources":["/Users/willieluong/Desktop/sorting-visualizer/src/sortinalgorithms/BubbleSort.js"],"names":["getBubblesSortAnimations","array","animation","auxiliaryArray","slice","bubbleSort","aninmation","temp","i","length","j"],"mappings":"AAAA;AACA,OAAO,SAASA,wBAAT,CAAkCC,KAAlC,EAAyC;AAC5C;AACA,QAAMC,SAAS,GAAG,EAAlB,CAF4C,CAG5C;;AACA,QAAMC,cAAc,GAAGF,KAAK,CAACG,KAAN,EAAvB,CAJ4C,CAK5C;;AACAC,EAAAA,UAAU,CAACH,SAAD,EAAYC,cAAZ,CAAV;AACA,SAAOD,SAAP;AACD,C,CAAA;AAEH;;AACA,SAASG,UAAT,CAAoBC,UAApB,EAAgCL,KAAhC,EACA;AACI,MAAIM,IAAJ,CADJ,CAGI;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,KAAK,CAACQ,MAAzB,EAAiCD,CAAC,EAAlC,EACA;AACI,SAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,KAAK,CAACQ,MAAN,GAAe,CAAlC,EAAqCC,CAAC,EAAtC,EACA;AACI,UAAGT,KAAK,CAACS,CAAD,CAAL,GAAWT,KAAK,CAACS,CAAC,GAAC,CAAH,CAAnB,EACA;AACI;AACAH,QAAAA,IAAI,GAAGN,KAAK,CAACS,CAAD,CAAZ;AACAT,QAAAA,KAAK,CAACS,CAAD,CAAL,GAAWT,KAAK,CAACS,CAAC,GAAC,CAAH,CAAhB;AACAT,QAAAA,KAAK,CAACS,CAAC,GAAC,CAAH,CAAL,GAAaH,IAAb;AAEH;AACJ;AACJ;;AACD,SAAON,KAAP;AAIH","sourcesContent":["//Function to handle bubble sort:\nexport function getBubblesSortAnimations(array) {\n    //variable to hold the animation list of the array\n    const animation = [];\n    //make a copy of each element into another array\n    const auxiliaryArray = array.slice();\n    //sort the array through bubble sort\n    bubbleSort(animation, auxiliaryArray);\n    return animation;\n  }//end of bubble sort\n\n//Function to sort the array using bubble sort\nfunction bubbleSort(aninmation, array)\n{\n    var temp; \n\n    //looping through the array and chek if each element is on the right order or not\n    for(let i = 0; i < array.length; i++)\n    {\n        for(let j = 0; j < array.length - 1; j++)\n        {\n            if(array[j] > array[j+1])\n            {\n                //swap the element:\n                temp = array[j]; \n                array[j] = array[j+1];\n                array[j+1] = temp;\n\n            }\n        }\n    }\n    return array;\n    \n\n\n}\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   "]},"metadata":{},"sourceType":"module"}