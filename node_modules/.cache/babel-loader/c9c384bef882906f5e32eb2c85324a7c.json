{"ast":null,"code":"//fucntion to handle the selection sort algorithm and animation backend\nexport function getSelectionSortAnimation(array) {\n  //loop through the array until n-2 (n is the length of the array)\n  for (let i = 0; i < array.length - 2; i++) {\n    //set the smallest element to be at the current index of the loop\n    let indexOfMin = i; //loop through the array again to match the smallest element with its neighbors\n\n    for (let j = i + 1; i < array.length - 1; i++) {\n      //if the neighbor element is lesser than the smallest element, then swap the index of the \n      //smallest element to be the neighbor\n      indexOfMin = j;\n    }\n\n    swap(array, array[i], array[indexOfMin]);\n  }\n\n  return array;\n} // \n//function to swap two element in an array:\n\nfunction swap(array, first, second) {\n  let temp = array[first];\n  array[first] = array[last];\n  array[last] = temp;\n} //end of swap()","map":{"version":3,"sources":["/Users/willieluong/Desktop/sorting-visualizer/src/sortinalgorithms/selectionSort.js"],"names":["getSelectionSortAnimation","array","i","length","indexOfMin","j","swap","first","second","temp","last"],"mappings":"AAAA;AACA,OAAO,SAASA,yBAAT,CAAmCC,KAAnC,EACP;AACI;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAlC,EAAqCD,CAAC,EAAtC,EACA;AACI;AACA,QAAIE,UAAU,GAAGF,CAAjB,CAFJ,CAGI;;AACA,SAAI,IAAIG,CAAC,GAAGH,CAAC,GAAE,CAAf,EAAkBA,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAe,CAArC,EAAwCD,CAAC,EAAzC,EACA;AACI;AACA;AACAE,MAAAA,UAAU,GAAGC,CAAb;AACH;;AAEDC,IAAAA,IAAI,CAACL,KAAD,EAAQA,KAAK,CAACC,CAAD,CAAb,EAAkBD,KAAK,CAACG,UAAD,CAAvB,CAAJ;AACH;;AACD,SAAOH,KAAP;AACH,C,CAAA;AAED;;AACA,SAASK,IAAT,CAAcL,KAAd,EAAqBM,KAArB,EAA4BC,MAA5B,EACA;AACI,MAAIC,IAAI,GAAGR,KAAK,CAACM,KAAD,CAAhB;AACAN,EAAAA,KAAK,CAACM,KAAD,CAAL,GAAeN,KAAK,CAACS,IAAD,CAApB;AACAT,EAAAA,KAAK,CAACS,IAAD,CAAL,GAAcD,IAAd;AACH,C,CAAA","sourcesContent":["//fucntion to handle the selection sort algorithm and animation backend\nexport function getSelectionSortAnimation(array)\n{\n    //loop through the array until n-2 (n is the length of the array)\n    for(let i = 0; i < array.length - 2; i++)\n    {\n        //set the smallest element to be at the current index of the loop\n        let indexOfMin = i;\n        //loop through the array again to match the smallest element with its neighbors\n        for(let j = i +1; i < array.length - 1; i++)\n        {\n            //if the neighbor element is lesser than the smallest element, then swap the index of the \n            //smallest element to be the neighbor\n            indexOfMin = j;\n        }\n\n        swap(array, array[i], array[indexOfMin])\n    }\n    return array;\n}// \n\n//function to swap two element in an array:\nfunction swap(array, first, second)\n{\n    let temp = array[first];\n    array[first] = array[last];\n    array[last] = temp;\n}//end of swap()\n\n"]},"metadata":{},"sourceType":"module"}