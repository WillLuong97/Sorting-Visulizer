{"ast":null,"code":"//fucntion to handle the selection sort algorithm and animation backend\nexport function getSelectionSortAnimation(array) {\n  let length = array.length; //loop through the array until n-2 (n is the length of the array)\n\n  for (let i = 0; i < length - 1; i++) {\n    //set the smallest element to be at the current index of the loop\n    let indexOfMin = i; //loop through the array again to match the smallest element with its neighbors\n\n    for (let j = i + 1; j < length; j++) {\n      //if the neighbor element is lesser than the smallest element, then swap the index of the \n      if (array[j] < array[indexOfMin]) {\n        //smallest element to be the neighbor\n        indexOfMin = j;\n      }\n    }\n\n    swap(array, array[i], array[indexOfMin]);\n  }\n\n  return array;\n} // \n//function to swap two element in an array:\n\nfunction swap(array, first, last) {\n  let temp = array[first];\n  array[first] = array[last];\n  array[last] = temp;\n} //end of swap()","map":{"version":3,"sources":["/Users/willieluong/Desktop/sorting-visualizer/src/sortinalgorithms/selectionSort.js"],"names":["getSelectionSortAnimation","array","length","i","indexOfMin","j","swap","first","last","temp"],"mappings":"AAAA;AACA,OAAO,SAASA,yBAAT,CAAmCC,KAAnC,EACP;AACI,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB,CADJ,CAEI;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,MAAM,GAAG,CAA5B,EAA+BC,CAAC,EAAhC,EACA;AACI;AACA,QAAIC,UAAU,GAAGD,CAAjB,CAFJ,CAGI;;AACA,SAAI,IAAIE,CAAC,GAAGF,CAAC,GAAE,CAAf,EAAkBE,CAAC,GAAGH,MAAtB,EAA8BG,CAAC,EAA/B,EACA;AACI;AACA,UAAGJ,KAAK,CAACI,CAAD,CAAL,GAAWJ,KAAK,CAACG,UAAD,CAAnB,EACA;AACI;AACAA,QAAAA,UAAU,GAAGC,CAAb;AACH;AACJ;;AAEDC,IAAAA,IAAI,CAACL,KAAD,EAAQA,KAAK,CAACE,CAAD,CAAb,EAAkBF,KAAK,CAACG,UAAD,CAAvB,CAAJ;AACH;;AACD,SAAOH,KAAP;AACH,C,CAAA;AAED;;AACA,SAASK,IAAT,CAAcL,KAAd,EAAqBM,KAArB,EAA4BC,IAA5B,EACA;AACI,MAAIC,IAAI,GAAGR,KAAK,CAACM,KAAD,CAAhB;AACAN,EAAAA,KAAK,CAACM,KAAD,CAAL,GAAeN,KAAK,CAACO,IAAD,CAApB;AACAP,EAAAA,KAAK,CAACO,IAAD,CAAL,GAAcC,IAAd;AACH,C,CAAA","sourcesContent":["//fucntion to handle the selection sort algorithm and animation backend\nexport function getSelectionSortAnimation(array)\n{\n    let length = array.length\n    //loop through the array until n-2 (n is the length of the array)\n    for(let i = 0; i < length - 1; i++)\n    {\n        //set the smallest element to be at the current index of the loop\n        let indexOfMin = i;\n        //loop through the array again to match the smallest element with its neighbors\n        for(let j = i +1; j < length; j++)\n        {\n            //if the neighbor element is lesser than the smallest element, then swap the index of the \n            if(array[j] < array[indexOfMin])\n            {\n                //smallest element to be the neighbor\n                indexOfMin = j;\n            }\n        }\n\n        swap(array, array[i], array[indexOfMin])\n    }\n    return array;\n}// \n\n//function to swap two element in an array:\nfunction swap(array, first, last)\n{\n    let temp = array[first];\n    array[first] = array[last];\n    array[last] = temp;\n}//end of swap()\n\n"]},"metadata":{},"sourceType":"module"}